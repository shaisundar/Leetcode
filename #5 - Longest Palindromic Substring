class Solution:
    def longestPalindrome(self, s: str) -> str:
        res=""
        
        for i in range(len(s)):
            l=i
            r=i
            while l>=0 and r<len(s) and s[l]==s[r]:
                tmp=s[l:r+1]
                if len(res)<len(tmp):
                    res=tmp
                l-=1
                r+=1
        
        for i in range(len(s)):
            l=i
            r=i+1
            while l>=0 and r<len(s) and s[l]==s[r]:
                tmp=s[l:r+1]
                if len(res)<len(tmp):
                    res=tmp
                l-=1
                r+=1
                
        return(res)
        
        
        
   # start by keeping a single pointer from 0 to i
   # check on both sides of i, if they are equal and the length of this new substring is longer than res,
   # Then, replace the result. 
