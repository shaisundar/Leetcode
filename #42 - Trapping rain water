class Solution:
    def trap(self, nums: List[int]) -> int:
        l=0
        r=len(nums)-1
        lmax=nums[l]
        rmax=nums[r]
        res=0
        while l<r:
            if nums[l]<=nums[r]:
                l+=1
                if nums[l]<=lmax:
                    res+=lmax-nums[l]
                lmax=max(lmax,nums[l])
            else:
                r-=1
                if nums[r]<rmax:
                    res+=rmax-nums[r]
                rmax=max(rmax,nums[r])
            
        return(res)
        
  # keep a leftmax and rightmax
  # (l) starts at 0, (r) starts at right most
  # move (l) to right, (r) to left.
  # if l<maxl, add to res, if r<maxr, add to res
  # based on maxl is small, or right r is small, whichever is smaller, move (l) or (r) - smaller one should move. 
  
